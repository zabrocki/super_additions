def leading_term(h_expr):
    '''''
    EXAMPLES::
    sage:SFSS = SymmetricFunctionsinSuperSpace(QQ)
    sage:s = Schur(SFSS)
    sage:A = s.to_complete_on_basis(SuperPartition([[2,1],[3,2,2]]))
    sage:leading_term(A)
    ....: ([[2, 1], [3, 2, 2]], -1)
    
    '''''
    sp = [[i,c] for i,c in h_expr]
    sum_term = [[sum(i[0]),[i[1][0]],i,c] for i,c in sp]
    leading_term= min([[[i[2][0],i[2][1]], i[3]] for i in sum_term if i[0] == max(sum_term[i][0]for i in range(len(sum_term)))\
                            and i[1]==min(sum_term[i][1]for i in range(len(sum_term)))] )
    return leading_term[0],leading_term[1]

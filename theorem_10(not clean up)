load("http://garsia.math.yorku.ca/~zabrocki/superpartitions.py")
def theorem_10(sp,h): 
    r'''
     a list of super partitions that differ from ``self`` by theroem 10
         
    INPUT:
    - ``sp`` -- a super partition
    - ``h`` -- number of addition cells 
    
    OUPUT:
    - a list of super partitions
    
    EXAMPLES::
        
        sage: theorem_10([[4,1],[5,4]],3)
        [[4, 3; 5, 4, 1],
         [4, 1; 5, 4, 3],
         [4, 2; 5, 5, 1],
         [4, 1; 5, 5, 2],
         [4, 2; 6, 4, 1],
         [4, 1; 6, 4, 2],
         [4, 1; 6, 5, 1],
         [4, 1; 7, 4, 1],
         [4, 3; 5, 5],
         [4, 3; 6, 4],
         [4, 2; 6, 5],
         [4, 2; 7, 4],
         [4, 1; 7, 5],
         [4, 1; 8, 4]]
        sage: theorem_10([[3,1],[5]],2)
        [[3, 2; 5, 1],
         [3, 1; 5, 2],
         [4, 1; 5, 1],
         [3, 1; 6, 1],
         [4, 2; 5],
         [3, 2; 6],
         [4, 1; 6],
         [3, 1; 7]]
    '''
    (sp1, circ_list) = SuperPartition(sp).to_circled_diagram()
    nsp=[list(la)+[0] for la in sp1.add_horizontal_border_strip(h)]
    sp1= sp1+[0]
    out=[]
    for asp in nsp:
        asp = asp+[0]
        change_in_rows = map(operator.sub,asp[:len(sp1)],sp1)
        moved_circ_list= [[]for i in range(len(circ_list))]        
        for i in range(len(circ_list)):                    
            if change_in_rows[circ_list[i][0]]==0:             
                moved_circ_list[i].append(circ_list[i])
            else:                     
                if circ_list[i][0]==0:                                                      
                    moved_circ_list[i].append((0,circ_list[i][1]+change_in_rows[0]))
                else:                                                                        
                    if circ_list[i][1]+change_in_rows[circ_list[i][0]]<sp1[circ_list[i][0]-1]:                          
                        moved_circ_list[i].append((circ_list[i][0],circ_list[i][1]+change_in_rows[circ_list[i][0]]))
                    if asp[circ_list[i][0]+1]==sp1[circ_list[i][0]]: 
                        moved_circ_list[i].append((circ_list[i][0]+1,circ_list[i][1]))
        out+=[[moved_circ_list,asp]]  
    result = [[j[1],[j[0][0][0],j[0][1][i]]] for j in out if j[0] and j[0][0]  for i in range(len(j[0][1]))]
    return [SuperPartition.from_circled_diagram(*i) for i in result if len(i[1])!=0]
